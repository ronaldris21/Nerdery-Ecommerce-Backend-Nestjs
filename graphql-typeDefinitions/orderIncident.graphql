# ORDER INCIDENT DEFINITIONS
type OrderIncident {
  id: ID!
  managerId: ID!
  clientId: ID!
  orderId: ID!
  withRestock: Boolean!
  reason: String!
  currency: String!
  totalPrice: Float!
  createdAt: String!
  manager: User
  client: User
  order: Order
}

# INPUTS
input CreateOrderIncidentInput {
  orderId: ID!
  reason: String!
  withRestock: Boolean = true
}

# QUERIES
type Query {
  # Retrieves all incidents logs
  # Managers only: If role=manager, can retrieve all incidents
  # Optionally filter by userId (clientId)
  orderIncidents(userId: ID): [OrderIncident!]

  # Retrieves all incidents for a given orderId
  # Managers only
  orderIncidentsByOrderId(orderId: ID!): [OrderIncident!]
}

# MUTATIONS
type Mutation {
  # Creates an order incident and deletes the order
  # Managers only
  createOrderIncident(input: CreateOrderIncidentInput!): OrderIncident!
}
